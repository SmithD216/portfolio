{
  "version": 3,
  "sources": ["../../react-router/lib/use-sync-external-store-shim/useSyncExternalStoreShimClient.ts", "../../react-router/lib/use-sync-external-store-shim/useSyncExternalStoreShimServer.ts", "../../react-router/lib/use-sync-external-store-shim/index.ts", "../../react-router/lib/context.ts", "../../react-router/lib/hooks.tsx", "../../react-router/lib/components.tsx", "../../react-router/index.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport * as React from \"react\";\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction isPolyfill(x: any, y: any) {\n  return (\n    (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n  );\n}\n\nconst is: (x: any, y: any) => boolean =\n  typeof Object.is === \"function\" ? Object.is : isPolyfill;\n\n// Intentionally not using named imports because Rollup uses dynamic\n// dispatch for CommonJS interop named imports.\nconst { useState, useEffect, useLayoutEffect, useDebugValue } = React;\n\nlet didWarnOld18Alpha = false;\nlet didWarnUncachedGetSnapshot = false;\n\n// Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\nexport function useSyncExternalStore<T>(\n  subscribe: (fn: () => void) => () => void,\n  getSnapshot: () => T,\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  getServerSnapshot?: () => T\n): T {\n  if (__DEV__) {\n    if (!didWarnOld18Alpha) {\n      if (\"startTransition\" in React) {\n        didWarnOld18Alpha = true;\n        console.error(\n          \"You are using an outdated, pre-release alpha of React 18 that \" +\n            \"does not support useSyncExternalStore. The \" +\n            \"use-sync-external-store shim will not work correctly. Upgrade \" +\n            \"to a newer pre-release.\"\n        );\n      }\n    }\n  }\n\n  // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n  const value = getSnapshot();\n  if (__DEV__) {\n    if (!didWarnUncachedGetSnapshot) {\n      const cachedValue = getSnapshot();\n      if (!is(value, cachedValue)) {\n        console.error(\n          \"The result of getSnapshot should be cached to avoid an infinite loop\"\n        );\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  }\n\n  // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n  const [{ inst }, forceUpdate] = useState({ inst: { value, getSnapshot } });\n\n  // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n  useLayoutEffect(() => {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot;\n\n    // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({ inst });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe, value, getSnapshot]);\n\n  useEffect(() => {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({ inst });\n    }\n    const handleStoreChange = () => {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({ inst });\n      }\n    };\n    // Subscribe to the store and return a clean-up function.\n    return subscribe(handleStoreChange);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe]);\n\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst: any) {\n  const latestGetSnapshot = inst.getSnapshot;\n  const prevValue = inst.value;\n  try {\n    const nextValue = latestGetSnapshot();\n    return !is(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport function useSyncExternalStore<T>(\n  subscribe: (fn: () => void) => () => void,\n  getSnapshot: () => T,\n  getServerSnapshot?: () => T\n): T {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n", "/**\n * Inlined into the react-router repo since use-sync-external-store does not\n * provide a UMD-compatible package, so we need this to be able to distribute\n * UMD react-router bundles\n */\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from \"react\";\n\nimport { useSyncExternalStore as client } from \"./useSyncExternalStoreShimClient\";\nimport { useSyncExternalStore as server } from \"./useSyncExternalStoreShimServer\";\n\nconst canUseDOM: boolean = !!(\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\"\n);\nconst isServerEnvironment = !canUseDOM;\nconst shim = isServerEnvironment ? server : client;\n\nexport const useSyncExternalStore =\n  \"useSyncExternalStore\" in React\n    ? ((module) => module.useSyncExternalStore)(React)\n    : shim;\n", "import * as React from \"react\";\nimport type {\n  AgnosticRouteMatch,\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  History,\n  Location,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n  LazyRouteFunction,\n} from \"@remix-run/router\";\nimport type { Action as NavigationType } from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject extends NavigationContextObject {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n", "import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  Router as RemixRouter,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n  DataRouteMatch,\n  RelativeRoutingType,\n} from \"./context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n  AwaitContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(\n        activeRef.current,\n        `You should call navigate() in a React.useEffect(), not when ` +\n          `your component is first rendered.`\n      );\n\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history.  If this is a root navigation, then we\n      // navigate to the raw basename which allows the basename to have full\n      // control over the presence of a trailing slash on root links\n      if (basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [basename, navigator, routePathnamesJson, locationPathname]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let dataRouterStateContext = React.useContext(DataRouterStateContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterStateContext || undefined\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own&nbsp;\n          <code style={codeStyles}>ErrorBoundary</code> prop on&nbsp;\n          <code style={codeStyles}>&lt;Route&gt;</code>\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location) {\n      return {\n        error: props.error,\n        location: props.location,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState?: RemixRouter[\"state\"]\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for the current errors: ${errors}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      if (match.route.ErrorBoundary) {\n        errorElement = <match.route.ErrorBoundary />;\n      } else if (match.route.errorElement) {\n        errorElement = match.route.errorElement;\n      } else {\n        errorElement = <DefaultErrorComponent />;\n      }\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode = outlet;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{ outlet, matches }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation,\n  };\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () =>\n      matches.map((match) => {\n        let { pathname, params } = match;\n        // Note: This structure matches that created by createUseMatchesMatch\n        // in the @remix-run/router , so if you change this please also change\n        // that :)  Eventually we'll DRY this up\n        return {\n          id: match.route.id,\n          pathname,\n          params,\n          data: loaderData[match.route.id] as unknown,\n          handle: match.route.handle as unknown,\n        };\n      }),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useActionData must be used inside a RouteContext`);\n\n  return Object.values(state?.actionData || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey] = React.useState(() => String(++blockerId));\n\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (args) => {\n      return typeof shouldBlock === \"function\"\n        ? !!shouldBlock(args)\n        : !!shouldBlock;\n    },\n    [shouldBlock]\n  );\n\n  let blocker = router.getBlocker(blockerKey, blockerFunction);\n\n  // Cleanup on unmount\n  React.useEffect(\n    () => () => router.deleteBlocker(blockerKey),\n    [router, blockerKey]\n  );\n\n  // Prefer the blocker from state since DataRouterContext is memoized so this\n  // ensures we update on blocker state updates\n  return state.blockers.get(blockerKey) || blocker;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n", "import * as React from \"react\";\nimport type {\n  TrackedPromise,\n  InitialEntry,\n  Location,\n  MemoryHistory,\n  Router as RemixRouter,\n  RouterState,\n  To,\n  LazyRouteFunction,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  AbortedDeferredError,\n  createMemoryHistory,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\nimport { useSyncExternalStore as useSyncExternalStoreShim } from \"./use-sync-external-store-shim\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  Navigator,\n  NonIndexRouteObject,\n  RelativeRoutingType,\n} from \"./context\";\nimport {\n  LocationContext,\n  NavigationContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  AwaitContext,\n} from \"./context\";\nimport {\n  useAsyncValue,\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n} from \"./hooks\";\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n}: RouterProviderProps): React.ReactElement {\n  let getState = React.useCallback(() => router.state, [router]);\n\n  // Sync router state to our component state to force re-renders\n  let state: RouterState = useSyncExternalStoreShim(\n    router.subscribe,\n    getState,\n    // We have to provide this so React@18 doesn't complain during hydration,\n    // but we pass our serialized hydration data into the router so state here\n    // is already synced with what the server saw\n    getState\n  );\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={router.basename}\n            location={router.state.location}\n            navigationType={router.state.historyAction}\n            navigator={navigator}\n          >\n            {router.state.initialized ? <Routes /> : fallbackElement}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let dataRouterState = React.useContext(DataRouterStateContext);\n  let navigate = useNavigate();\n\n  React.useEffect(() => {\n    // Avoid kicking off multiple navigations if we're in the middle of a\n    // data-router navigation, since components get re-rendered when we enter\n    // a submitting/loading state\n    if (dataRouterState && dataRouterState.navigation.state !== \"idle\") {\n      return;\n    }\n    navigate(to, { replace, state, relative });\n  });\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  let dataRouterContext = React.useContext(DataRouterContext);\n  // When in a DataRouterContext _without_ children, we use the router routes\n  // directly.  If we have children, then we're in a descendant tree and we\n  // need to use child routes.\n  let routes =\n    dataRouterContext && !children\n      ? (dataRouterContext.router.routes as DataRouteObject[])\n      : createRoutesFromChildren(children);\n  return useRoutes(routes, location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, parentPath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let treePath = [...parentPath, index];\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n", "import type {\n  ActionFunction,\n  ActionFunctionArgs,\n  Blocker,\n  BlockerFunction,\n  Fetcher,\n  HydrationState,\n  JsonFunction,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  Navigation,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  PathPattern,\n  RedirectFunction,\n  Router as RemixRouter,\n  ShouldRevalidateFunction,\n  To,\n  InitialEntry,\n  LazyRouteFunction,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  createPath,\n  createRouter,\n  defer,\n  generatePath,\n  isRouteErrorResponse,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  resolvePath,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  AwaitProps,\n  MemoryRouterProps,\n  NavigateProps,\n  OutletProps,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  RoutesProps,\n  RouterProviderProps,\n} from \"./lib/components\";\nimport {\n  createRoutesFromChildren,\n  renderMatches,\n  Await,\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n} from \"./lib/components\";\nimport type {\n  DataRouteMatch,\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NavigateOptions,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  RelativeRoutingType,\n} from \"./lib/context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./lib/context\";\nimport type { NavigateFunction } from \"./lib/hooks\";\nimport {\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigationType,\n  useNavigate,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useLoaderData,\n  useMatches,\n  useNavigation,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n} from \"./lib/hooks\";\n\n// Exported for backwards compatibility, but not being used internally anymore\ntype Hash = string;\ntype Pathname = string;\ntype Search = string;\n\n// Expose react-router public API\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker as unstable_Blocker,\n  BlockerFunction as unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n};\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromChildren as createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker as unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n};\n\nfunction detectErrorBoundary(route: RouteObject) {\n  if (__DEV__) {\n    if (route.Component && route.element) {\n      warning(\n        false,\n        \"You should not include both `Component` and `element` on your route - \" +\n          \"`element` will be ignored.\"\n      );\n    }\n    if (route.ErrorBoundary && route.errorElement) {\n      warning(\n        false,\n        \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" +\n          \"`errorElement` will be ignored.\"\n      );\n    }\n  }\n\n  // Note: this check also occurs in createRoutesFromChildren so update\n  // there if you change this\n  return Boolean(route.ErrorBoundary) || Boolean(route.errorElement);\n}\n\nexport function createMemoryRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    initialEntries?: InitialEntry[];\n    initialIndex?: number;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createMemoryHistory({\n      initialEntries: opts?.initialEntries,\n      initialIndex: opts?.initialIndex,\n    }),\n    hydrationData: opts?.hydrationData,\n    routes,\n    detectErrorBoundary,\n  }).initialize();\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  NavigationContext as UNSAFE_NavigationContext,\n  LocationContext as UNSAFE_LocationContext,\n  RouteContext as UNSAFE_RouteContext,\n  DataRouterContext as UNSAFE_DataRouterContext,\n  DataRouterStateContext as UNSAFE_DataRouterStateContext,\n  detectErrorBoundary as UNSAFE_detectErrorBoundary,\n};\n"],
  "mappings": "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",
  "names": ["isPolyfill", "x", "y", "is", "Object", "useState", "useEffect", "useLayoutEffect", "useDebugValue", "React", "didWarnOld18Alpha", "didWarnUncachedGetSnapshot", "useSyncExternalStore", "subscribe", "getSnapshot", "getServerSnapshot", "console", "error", "value", "cachedValue", "inst", "forceUpdate", "checkIfSnapshotChanged", "handleStoreChange", "latestGetSnapshot", "prevValue", "nextValue", "canUseDOM", "window", "document", "createElement", "isServerEnvironment", "shim", "server", "client", "module", "DataRouterContext", "createContext", "displayName", "DataRouterStateContext", "AwaitContext", "NavigationContext", "LocationContext", "RouteContext", "outlet", "matches", "RouteErrorContext", "useHref", "to", "relative", "useInRouterContext", "invariant", "basename", "navigator", "useContext", "hash", "pathname", "search", "useResolvedPath", "joinedPathname", "joinPaths", "createHref", "useLocation", "location", "useNavigationType", "navigationType", "useMatch", "pattern", "useMemo", "matchPath", "useNavigate", "locationPathname", "routePathnamesJson", "JSON", "stringify", "getPathContributingMatches", "map", "match", "pathnameBase", "activeRef", "useRef", "current", "navigate", "useCallback", "options", "warning", "go", "path", "resolveTo", "parse", "replace", "push", "state", "OutletContext", "useOutletContext", "useOutlet", "context", "useParams", "routeMatch", "length", "params", "useRoutes", "routes", "locationArg", "dataRouterStateContext", "parentMatches", "parentParams", "parentPathname", "parentPathnameBase", "parentRoute", "route", "parentPath", "warningOnce", "endsWith", "locationFromContext", "parsedLocationArg", "parsePath", "startsWith", "remainingPathname", "slice", "matchRoutes", "element", "undefined", "Component", "renderedMatches", "_renderMatches", "assign", "encodeLocation", "key", "NavigationType", "Pop", "DefaultErrorComponent", "useRouteError", "message", "isRouteErrorResponse", "status", "statusText", "Error", "stack", "lightgrey", "preStyles", "padding", "backgroundColor", "codeStyles", "devInfo", "fontStyle", "RenderErrorBoundary", "constructor", "props", "getDerivedStateFromError", "getDerivedStateFromProps", "componentDidCatch", "errorInfo", "render", "routeContext", "component", "children", "RenderedRoute", "dataRouterContext", "static", "staticContext", "errorElement", "ErrorBoundary", "_deepestRenderedBoundaryId", "id", "dataRouterState", "errors", "errorIndex", "findIndex", "m", "Math", "min", "reduceRight", "index", "concat", "getChildren", "DataRouterHook", "DataRouterStateHook", "getDataRouterConsoleError", "hookName", "useDataRouterContext", "ctx", "useDataRouterState", "useRouteContext", "useCurrentRouteId", "thisRoute", "useNavigation", "UseNavigation", "navigation", "useRevalidator", "UseRevalidator", "revalidate", "router", "revalidation", "useMatches", "loaderData", "UseMatches", "data", "handle", "useLoaderData", "UseLoaderData", "routeId", "useRouteLoaderData", "UseRouteLoaderData", "useActionData", "UseActionData", "values", "actionData", "UseRouteError", "useAsyncValue", "_data", "useAsyncError", "_error", "blockerId", "useBlocker", "shouldBlock", "UseBlocker", "blockerKey", "String", "blockerFunction", "args", "blocker", "getBlocker", "deleteBlocker", "blockers", "get", "alreadyWarned", "cond", "RouterProvider", "fallbackElement", "getState", "useSyncExternalStoreShim", "n", "opts", "preventScrollReset", "historyAction", "initialized", "MemoryRouter", "initialEntries", "initialIndex", "historyRef", "createMemoryHistory", "v5Compat", "history", "setState", "action", "listen", "Navigate", "Outlet", "Route", "_props", "Router", "basenameProp", "locationProp", "staticProp", "navigationContext", "locationContext", "trailingPathname", "stripBasename", "Routes", "createRoutesFromChildren", "Await", "resolve", "AwaitRenderStatus", "neverSettledPromise", "Promise", "AwaitErrorBoundary", "promise", "pending", "success", "defineProperty", "renderError", "reject", "catch", "_tracked", "then", "AbortedDeferredError", "ResolveAwait", "toRender", "Children", "forEach", "isValidElement", "type", "Fragment", "apply", "name", "treePath", "join", "caseSensitive", "loader", "hasErrorBoundary", "shouldRevalidate", "lazy", "renderMatches", "detectErrorBoundary", "Boolean", "createMemoryRouter", "createRouter", "hydrationData", "initialize"]
}
